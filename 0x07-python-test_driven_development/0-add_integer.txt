======================
Using ``add_integer``
----------------------

This is a text file in reStructuredText format to test the `add_integer` function.

First, import `add_integer` for use in the `0-main` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now, use it with ideal cases of adding two integers:

    >>> add_integer(4, 2)
    6

    >>> add_integer(4, 7)
    11

    >>> add_integer(4, -7)
    -3

    >>> add_integer(-4, 7)
    3

    >>> add_integer(-4, -7)
    -11

    >>> add_integer(4000000000, 2)
    4000000002

    >>> add_integer(2, 4000000000)
    4000000002

    >>> add_integer(4000000000, 2000000000)
    6000000000

    >>> add_integer(4000000000, -2000000000)
    2000000000

    >>> add_integer(-4000000000, 2000000000)
    -2000000000

Now, use it with float integers:

    >>> add_integer(4, 7.5)
    11

    >>> add_integer(4.3, 7)
    11

    >>> add_integer(4.2, 7.5)
    11

    >>> add_integer(4.2, -7)
    -3

    >>> add_integer(-4.2, 7.4)
    3

    >>> add_integer(-4.2, -7.4)
    -11

    >>> add_integer(4000000000.6, 2)
    4000000002

    >>> add_integer(2, 4000000000.6)
    4000000002

    >>> add_integer(4000000000.6, 2000000000.6)
    6000000000

    >>> add_integer(4000000000.6, -2000000000.6)
    2000000000

    >>> add_integer(-4000000000.6, 2000000000.6)
    -2000000000

Default add:

    >>> add_integer(4)
    102

    >>> add_integer(4.3)
    102

    >>> add_integer(-4)
    94

    >>> add_integer(-4.3)
    94

Using different kinds of characters:

    >>> add_integer('O', 7)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

    >>> add_integer(4, 'O')
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

    >>> add_integer('O', 'e')
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

Using different kinds of strings:

    >>> add_integer('Omre', 7)
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

    >>> add_integer(4, 'Omre')
    Traceback (most recent call last):
    TypeError: a must be an integer or b must be an integer

    >>> add_integer('Omre', 'enta')
    Traceback

